[["index.html", "Applied Malaria Dynamics Dynamical Systems for Adaptive Malaria Control Foreword", " Applied Malaria Dynamics Dynamical Systems for Adaptive Malaria Control David L. Smith and the RAMP Team 2023-01-19 Foreword A large fraction of my time over the past 20 years has been devoted to learning about mathematical models of malaria epidemiology and transmission dynamics, mosquito ecology, vector control, and the evolution of resistance. All the time I was building and analyzing models, I was looking for a way of organizing and applying the rich body of theory developed over more than a century of malaria research, starting with Ross and Macdonald [1]. A new framework would integrate the concepts and models that have influenced malaria through the present day [2,3], and it might even serve as a platform for recasting a theory of malaria epidemiology, transmission dynamics, and control [4]. The goal was to build a framework that could serve malaria policy. Policy discussions might need the math, but the discussion should never be about the math.There were some core challenges, but if we could solve those, we could make the math easier to use so that discussions would focus on the issues that mattered. Ideally, the framework could be taken up and used by teams of local experts working in their own countries to reduce the burden of malaria and plan for its elimination. I wanted the new framework to be extensible, with plug-and-play modularity (for major dynamical components), and with structural flexibility. It should have the capability of scaling down for fine-grained spatial simulations [5–7], or scaling up to understand or analyze regional processes and the emerging patterns [8]. To serve the needs of malaria programs, a framework would need built-in support for exogenous forcing by weather and vector control to model malaria as a changing baseline modified by control. To get integrated vector control right, we went all in on mosquito ecology with an individual-based simulation model with exquisite biological detail [9], which inspired new ideas about mosquito search and a new base model for mosquito ecology and behavior. To serve programmatic needs, we needed algorithms that could address the durability of a unit of vector control – coverage could decay over time through loss (e.g. bed nets) or waning potency. To make all the pieces fit together, we needed interfaces that could connect up models in a generic way; in the design phase, we worked with two model families for each major dynamical component – one that was dead simple, and one that had a was highly realistic. In some cases, the interface designs called for development of new algorithms: blood feeding, egg laying, environmental heterogeneity, human mobility, and mosquito dispersal. In making a master list to test the framework’s extensibility, we found that some odd cases that needed to pass information among components – endectocides and auto-disseminated larvicides – but it was easy enough to accommodate these. These models needed supporting theory. We wanted the software to help understand thresholds, so we wrote the routines that would compute thresholds for malaria transmission in heterogeneous systems, when appropriate. Sometime in the fall of 2022, the last few pieces came together. We published the first versions of MicroMoB and exDE at CRAN. We submitted a paper to PLoS Computational Biology [10]. Then it was time to write this book. With the software developed, we have the capability of building models that are up to the task of guiding malaria policy. The advantage of using the framework and accompanying software is that we solved many of the potential design problems that come from combining models. We found most of them the hard way. The framework took longer to developed than I had expected, in part, because there were more pitfalls than we had anticipated. This book shows, through examples, how to use the software to build malaria models. Even without the software, it fills a gap for students who have taken an introduction to mathematical epidemiology or infectious disease modeling and want to go on in malaria. What are all the special topics that would need to be covered to build models that could be needed in malaria? This book could be the basis for such a course, if there were ever enough students. Since there will probably never be enough graduate students at my university who are interested in applied malaria dynamics, the material is being developed for any student anywhere. This book teaches how to build models for malaria policy, but it stops short of applying models to policy. That is covered in another book, Robust Analytics for Malaria Policy. The premise of this book is thus that the reader has a solid background in infectious disease models and malaria. We assume they’ve seen the Ross-Macdonald model before, and that they know something about how to construct and analyze models. This book emphasizes concepts and teaches through examples. We have left out a lot of the technical and mathemtical details, but we have written some vignettes and lessons to supplement the book. Most of this is found in the documentation for exDE or MicroMoB or it can be found in the RAMP-Model-Library. References "],["models-for-policy.html", "Models for Policy", " Models for Policy Malaria is complex and heterogeneous, which makes it difficult to study and manage. A core challenge in both science and policy is the availability of information. Mathematical models can help us understand and analyze all that complexity and make informed decisions despite the data gaps. There are good reasons why we might use different models in basic research and policy analytics. In policy, decisions must be made in a timely way, and they should use the best available evidence, even if it’s weak. An advantage of policy is that, if we make the effort, we can prioritize our needs and collect new data that could help resolve some of the most important sources of uncertainty. Building models to do this requires drawing heavily on basic research. In basic research, we develop mechanistic models to understand malaria as a biological process. In malaria epidemiology, the states and parameters describe infection, immunity, infectiousness, disease, and drug taking in response to exposure. Scientists focus on basic biological mechanisms in order to understand differences in malaria across spectrum of transmission. Immunity and drug-taking are important factors to consider, but it may be that differences in epidemiology and disease across settings arise from differences in the local parasite populations. The models are a way of summarizing knowledge in a quantitative form – something like a complex hypothesis. A test of a model’s adequacy is whether it can describe malaria accurately after accounting for differences in drug taking patterns and pattern of exposure. We study mosquito ecology and blood feeding to understand malaria transmission and develop theory for malaria control. Transmission models couple parasite infection dynamics in humans and mosquitoes through blood feeding. Mosquito populations are shaped by the aquatic habitats for immature mosquito populations. These habitats are standing water bodies, and they are shaped by topography, hydrology, land use, and the water chemistry, which is affected by surrounding rocks, soils, vegetation and pollution. These habitats are filled (exogenously forced) by rainfall and after some eggs are laid, the mosquito dynamics are affected by crowding, predation, and other endogenous dynamics. Larval development and parasite development rates are modified by temperature. Adult mosquito activity rates are affected by temperature, relative humidity, and vector control. Indoor residual spraying (IRS) kills mosquitoes when they rest on a sprayed surface, usually after blood feeding or during the process of searching for a host. Insecticide treated nets (ITNs) protect humans from biting and kill some mosquitoes. By reducing the availability of potential blood hosts, nets can slow blood feeding in some contexts. Larval source management (LSM) reduces immature population densities. By studying mosquito ecology and malaria transmission dynamics, we can start to understand malaria as a changing baseline that has been modified by malaria control. This is the problem confronted daily in malaria programs, but dealing with the evidence requires having the tools available to synthesize data describing different parts of malaria. The models help translate evidence into information that can be used to make decisions, to make strategic plans, and to mark progress against national plans. The models encapsulate information about transmission in context, so it is possible to study how malaria persists in a place over time, and how various factors have modified (or could modify) mosquito population dynamics and blood feeding and thereby suppress transmission. Transmission models help us to set intervention coverage targets based on an understanding of malaria connectivity to surrounding regions and local thresholds. In policy, we use these models with the expectation that – if we fit the models by adjusting parameters that affect how malaria works in some particular place – they should help us understand transmission in some particular context and make good decisions about what to do. Frustratingly, the heterogeneity and the complexity conspire against us. We would like to be sure about how malaria works across settings before we start using the models to stratify populations, tailor interventions to context, or targeting the interventions. Instead, we must admit that we don’t know everything we’d like to, and we probably never will. We must proceed with policy without having satisfactory answers to some basic questions. In policy, we will use the models to evaluate the consequences of having missing information, but we will also use the models to help us prioritize missing data so we can fill in the gaps. What missing data would reduce our uncertainty about what to do about malaria? How do we fill the critical knowledge gaps. To understand malaria or to give policy advice, we must start simple and then add complexity, layer on layer. To deal with missing information, we start with generic models, and then add details to address concerns about some of the details that we hope to identify by studying the systems as we intervene. This approach – starting simple and then layering on complexity – makes it possible to learn as we go. A question is when it stops making sense to add realism to a model. A model that it too simple and abstract might help us understand the basic dynamics and give generic advice, but we would question the model’s adequacy if it could not reproduce the patterns we cared about in some particular place at some particular time. As a rule of thumb, a model should be just complex enough to describe the patterns we care about and weigh the relevant options to give advice. Practically speaking, it’s hard to know you’ve gone far enough unless, at some point, it’s clear that you’ve gone a bit too far. Over the past few years, we developed a new framework for building models that would make it possible to start simple and then build models of malaria transmission at any level of complexity. We wanted to be able to build in realism by adding complexity one feature at a time. Through this process we can create nested, hierarchical models in branching chains. At the ends of the chains, we might find highly realistic models that are, perhaps, overfit. (The cautions against overfitting play out differently in policy given the urgency of acting in a timely way, but it is also possible to go out and collect new data.) We call the framework’s ability to do this scalability and the resulting swarms have scalable complexity. The iterative attempt to make plans, weigh evidence, quantify uncertainty, gather new data to reduce uncertainty, and then restart the annual cycle, is called adaptive malaria control. To make this possible, we needed a way of building models that would keep the focus on the policy questions and on a dialogue between malaria managers and the analytical support team. We thus sought to design modular software with plug-and-play functionality and a high degree of structural flexibility. We needed the framework to be extensible. After making a lot of mistakes, the primary design phase is over, and the algorithms have been published in two software packages. We are currently extending the library of base models, which includes some simple or classical models that are instructive or of historical interest. We are also fine-tuning the design requirements for models as we develop protocols that streamline fitting models to data. The software avoids the mistakes we made over the past few years, reuses models, and streamlines the model building process. We hope this software has dramatically lowered the costs of building and analyzing these complex, realistic models. A schematic diagram of the elements in the framework (top half) and the process of model building and model fitting (bottom half) This book has been written to introduce the features of the framework (see Figure 1.1). The book itself is embedded in the RAMP-Model-Library, which was set up during the primary design phase. The RAMP-Model-Library is where we made all our design mistakes: was the software truly plug-and-play, and was the framework truly extensible? As the primary design phase came to a close, the library that was once the laboratory became a classroom and a museum. The library is being transformed into a resource for any developer who wants to add new base models to the library or add functionality. Most of all, it is being set up for the end user, someone in a malaria program or working with a malaria program who wants to use simulation based analytics to analyze policies. This book is structured into a set of lessons that teach concepts. Some of the concepts build on one another, and others take on new challenges. We combine these lessons into some examples where we show some algorithms to build models fit for purpose. When a topic deserves a deeper dive, we have supplemented this book with vignettes or lessons. In malaria epidemiology (narrowly defined as a study of infection and disease in humans), the relationship between exposure, infection, immunity, disease, and infectiousness changes in populations as they age, and it is affected by drug taking. This picture grows more complex as we consider intervening with vaccines or monoclonal antibodies, or as we look at interactions with anemia, nutritional status, and human genetics. Our models need to interface with data from clinical settings and research, so they will need to consider diagnostics, parasite counts, detection, and transmission. Combining these factors can give rise to an overwhelming amount of complexity. Later, we will introduce new models and show how it possible to simplify all this complexity and make sense of malaria. We are interested in using these models to guide policy, which requires both solid computation and good communication. In this book, we lay a foundation for understanding the complexity by studying some simple compartmental models. We will review classical queuing models for superinfection and the multiplicity of infection (MoI); new models for the age of infection (AoI) or stage of infection (SoI); immunity; parasite densities, fever, disease, and detection; gametocytes and transmission, and drug taking. To end up with models that can handle all the complexity, we build probabilistic models that combine these factors. In doing so, we find that we can do some powerful analysis, and we can map the states in these models onto outcomes that matter for research and policy: test positivity, parasite counts, infectiousness, and disease. With patience, we can combine these factors and develop a framework for understanding malaria in populations that match the features of individual-based simulation models. We end up with a sensible understanding malaria epidemiology as ontogeny – development of immunity as a part of an organisms history. We back this view with some very usable models that capture the changing character of malaria in cohorts of humans as they age. We are interested in understanding malaria control in context, which requires delving into mosquito ecology and behavior. In this book, we start with a simple model for mosquito ecology and parasite infection dynamics in mosquitoes. We add aquatic population dynamics, mosquito population regulation, and exogenous forcing by weather. Later, we worry about adult mosquito behavioral states such as mating, sugar feeding, and egg laying. We introduce the concept of resource availability, and we develop an understanding of mosquito search and movement in response to resource availability. We take some deep dives to understand how mosquito spatial dynamics work at a fine spatial grain, and then we scale up to understand mosquito populations on landscapes. At first, we describe mosquito blood feeding and transmission with a few simple parameters. Later, we develop a new model for mosquito blood feeding in a dynamically changing host population with parameters that allow host strata to be more or less available. We also modify our understanding of heterogeneous exposure to biting. We develop a methods for modeling environmental heterogeneity, heterogeneous exposure by age, and a generalized way of handling failty– other sources of heterogeneous biting – through stratification. We must take a detour to understand how to handle the effects of temperature on the parasite’s extrinsic incubation period (EIP). We need a way of dealing with mosquito survival and dispersal through the EIP. This problem has been effectively solved. To round out this picture, we need a way of dealing with other aspects of human ecology that affect malaria transmission dynamics, including human mobility, human demography, bed net usage, adherance to drugs, and care seeking. Differences among humans call for a synthesis of studies that have identified traits that affect malaria, stratification, and simulation to identify useful ways of propagating the heterogeneity through analyses. To go along with a theory of transmission, we need a theory of control. We compute effect sizes and evaluate area effects. We develop a generalized concept of effect modification that considers the total effect of a single unit of control. We modify basic processes by including the effects of vector control and mass medical interventions (e.g. seasonal malaria chemoprotection, mass drug administration, vaccines, and monoclonal antibodies). Relying on behavioral state models and the concept of resource availability, we develop a models for integrated vector control. In doing all this, we are building on an enormous body of work that started with Ronald Ross. While Ross is better known for identifying malaria parasites in a mosquito gut, which proved that malaria is mosquito transmitted, we are more interested in the academic work that followed. After winning the Nobel Prize in 1902, Ross was instrumental in building solid quantitative foundations for malaria transmission and its measurement. Ronald Ross wrote the first models describing malaria transmission. In his writings from 1899 to 1908, it’s clear that he was searching for quantitative way of saying something simple – if there are not enough mosquitoes, the malaria transmission can’t be sustained. There must be a critical mosquito density, above the cutoff malaria transmission would be sustained, and below it malaria would be eliminated. Ross was looking for a formula that encapsulated his intuition: how were thresholds related to the fact that it took two bites for a mosquito to complete its life cycle? Eventually, Ross wrote down some systems of equations that would describe malaria. The ideas, mathematics, and identification of parameters and processes were extended by other scientists later, most notably Alfred Lotka and George Macdonald. It seems that the challenge of malaria control was what pushed Ross toward modeling. Ross’s first model was a discussion of adult mosquito movement to guide larval source management [11]. The first model describing malaria transmission appeared in a book, The Prevention of Malaria in Mauritius [12]. When it came to thinking through control, Ross found it useful to do the math. This is a book about how to do the math that is required for malaria programs. The goal is to use all the data available, but especially the data generated by malaria programs, to paint a clear picture of malaria transmission as a changing baseline that has been modified by control. The software is structured into three major domains: the humans and malaria epidemiology, including the effects of treating malaria with drugs; the mosquitoes and the way they have been changed by weather and vector control; and parasite transmission through mosquito blood feeding. Within each domain, there are multiple sub-domains, and there are built in design features to deal with heterogeneity and other features for malaria control. After a 140 years of studying malaria, there’s a lot of detail that could be important in some way. Part of what we need to do is sort through all that detail to find what is most relevant. We have organized the concepts in this book around a narrative that allows us to introduce the core concepts – those that make modular computation possible – in an order that minimizes the need to draw on unfamiliar concepts. We start with the Ross-Maconald model, but our next task is to update the model for mosquito blood feeding. Our philosophy has been to design a framework for model building that can be used by programs. The material in this book is designed to be used by non-experts too, so in this context, model building means applying a set of tools to to computational tasks we wish our brains could do. The software we have developed is meant to lower the costs of building and using models. We want programs to be focused on the decisions, the data, the concepts, and the analysis. As a metaphor, some students learn a numerical method for approximating \\(\\sqrt{2}\\) in school, but after learning it once, they stop worrying about how it is computed and they punch buttons into a calculator. Knowing how to compute something is sometimes useful, but worrying about how to compute it each time would interrupt the process that called for computing it. Instead, we punch the formula into a scientific calculator or any software that does computation confident that the machine knows how to do it. In applying models, the same kind of logic applies. People need to understand the concepts, but like a calculator, the tools should hide the technical details that don’t add to a discussion. The software we have developed is a reliable interface for calculations designed to support policy. To learn how to use that software, we need to get through a lot of material. The background material in the following presentation is fairly sparse. We are trying to introduce just enough mathematics to teach users the critical concepts so they know what the software can do. We assume that the work will be done by teams that include a few people who understand the mathematics, who can guide others through the process. To fill in some of the gaps and technical, we have written (or can write) vignettes. On occasion, the text includes links to these vignettes for those who might find them useful. Please send suggestions about new vignettes to smitdave@gmail.com. The first model we present is a Ross-Macdonald model. References "],["contributors.html", "Contributors", " Contributors Most of the content so far was written by David L Smith. The software package MicroMoB was written by Sean L Wu, Sophie Liebkind, and David L Smith. The software package exDE was written by Sean L Wu and David L Smith. …please consult Dave if you would like a writing role. David L. Smith "],["malaria-dynamics.html", "1 Malaria Dynamics", " 1 Malaria Dynamics We start by introducing a Ross-Macdonald model [1]. This particular model family is a system of delay differential equations that traces back to a 1982 book chapter written by Joan Aron and Robert May [13]. We think it’s a good starting point. We chose it because it is extensible. The variables represent population densities, which are used to compute proportions, like prevalence. The variables in many other versions of the Ross-Macdonald are proportions. In some models, we would like to be able to change the total number of hosts, but if the variables are proporions, these are the denominators. When a variables in equations described proportions, they are much more difficult to modify. We chose it because it already includes mosquito ecology, so we can bypass a lengthy discussion of the limitations of the Ross-Macdonald model. While Macdonald’s analysis and formulas are familiar, they were not complete [14,15]. We develop a formula for vectorial capacity that is consistent with the intent of the original, but our analysis of sensitivity to parameters includes effects on mosquito ecology [16]. (A lengthy and philosophical discussion of the history and its failings is planned.) We chose it because it is realistic. Time does not appear in most versions of the Ross-Macdonald model: the equations are autonomous. These equations use time to drive a seasonal pattern: they are non-autonomous. Since we know we are interested in dealing with exogenous forcing, we start out with a model that is forced. While the following model is basic, we recommend reading it, if only because we introduce concepts and conventions that are important for the software design. References "],["aron-and-mays-equations.html", "1.1 Aron and May’s Equations", " 1.1 Aron and May’s Equations The simplest quantitative description of malaria dynamics tracks the number of infected and infectious mosquitoes and the number of infected and infectious humans. To develop systems of equations, we assign names to variables that represent these quantities: the number of infected and infectious people is denoted \\(X(t)\\) (out of \\(H\\) total); the number of mosquitoes is \\(M(t)\\); the number of infected mosquitoes is \\(Y(t)\\) (out of \\(M(t)\\) total); and the number of infectious mosquitoes is denoted \\(Z(t)\\) (out of \\(M(t)\\) total). In dynamical systems, we ask how the variables (i.e. \\(M\\), \\(Y\\), \\(Z\\), and \\(X\\)) change over time. For our first equation, we start with adult, female mosquito populations. (It is tiresome to repeat adult, female each time, and we’re ignoring male mosquitoes at this point anyway, so mosquito hereafter means adult, female mosquito, unless we say otherwise.) The number of mosquitoes is changing as new adults emerge from aquatic habitats or die. 1.1.1 Mosquito Ecology To model changes in \\(M\\), we assume the following: mosquitoes emerge from aquatic habitats at the rate of \\(\\Lambda(t)\\) adults, per day; mosquitoes die at a constant rate, \\(g\\). This is equivalent to assuming that the mosquito lifespan is exponentially distributed with a mean \\(1/g\\). The fraction surviving one day is \\(e^{-g}\\). Our first equation describes changes in the number of mosquitoes: \\[\\begin{equation} \\frac{dM}{dt} = \\Lambda(t) - g M \\end{equation}\\] 1.1.2 Blood Fed Mosquitoes At this point, we will take a detour and define a variable describing the density of mosquitoes that have blood fed at least once, \\(V\\). After blood feeding, a mosquito is either gravid or parous, meaning its ovaries are distended from laying an egg batch. We do this, in part, because the fraction of mosquitoes that are parous is routinely collected, and because it gives us a chance to focus on blood feeding. To describe blood feeding, we assume the following: mosquitoes blood feed at the rate \\(f\\), per mosquito, per day; in this model, this implies that the waiting time to a blood meal is \\(1/f\\) days. a fraction of all mosquito blood meals, \\(q\\), is taken on humans; we call this the human fraction the human blood feeding rate is the product of these two parameters, \\(fq\\), which is defined as the number of human blood meals, per mosquito, per day. The number of human blood meals by a population of vector mosquitoes, per person, per day is called the human biting rate (HBR). In this model, HBR is given by a formula: \\[\\mbox{HBR} = \\frac{fqM}{H}\\] Later, we discuss the correspondence between the HBR in models and data. \\[\\begin{equation} \\frac{dV}{dt} = f q (M-V) - g V \\end{equation}\\] We won’t use \\(V\\) to describe the dynamics of infection, but we might find it useful to understand how parity changes in mosquito populations. 1.1.3 Infected Mosquitoes Mosquitoes become infected after blood feeding on an infectious human. To model changes in \\(Y\\), we extend the model of blood feeding to include infection. We need to know what fraction of blood meals end up infecting a mosquito that has not already been infected. To model changes in \\(Y\\), we need to describe infection rates. We assume the following: a fraction of human blood meals, infects mosquitoes. We call this quantity net infectiousness (NI) and (for reasons that we will discuss in a moment), we give it a name, \\(\\kappa\\): \\[\\kappa(t) = c \\frac{X(t)}{H}\\] infected mosquitoes die at the same rate as uninfected mosquitoes. We can now write down our second equation describing changes in the number of infected mosquitoes: \\[\\begin{equation} \\frac{dY}{dt} = f q \\kappa (M-Y) -g Y \\end{equation}\\] 1.1.4 Infectious Mosquitoes To become infectious, a mosquito has to become infected and then survive through the extrinsic incubation period (EIP). We assume: mosquitoes become infectious after a fixed delay, \\(\\tau\\) days, called the EIP. The fraction of mosquitoes that survive through the EIP is \\(e^{-g \\tau}\\). infectious mosquitoes die at the same rate as other mosquitoes. For a mosquito to become infectious, it must have become infected \\(\\tau\\) days ago and survived through \\(\\tau\\) days with probability \\(e^{-g\\tau}\\). To write this in equations, we use a subscripted \\(\\tau\\) to denote the value of a variable (\\(M\\), \\(Y\\) or \\(X\\)) or term (\\(\\kappa\\)) at time \\(t-\\tau\\). For example \\(X_\\tau\\) is the number of people who were infected and infecious at time \\(t-\\tau\\), and \\(M_\\tau\\) is the number of mosquitoes at time \\(t-\\tau\\). The number of infectious mosquitoes that are added to the population at a point in time includes all the mosquitoes that became infected at time \\(t-\\tau\\) and survived the EIP. This is our third equation describing changes in the number of infectious mosquitoes: \\[\\begin{equation} \\frac{dZ}{dt} = f q \\kappa_\\tau (M_\\tau-Y_\\tau) e^{-g\\tau} -g Z \\end{equation}\\] Here, \\(Z\\) represents the number of mosquitoes with sporozoites in their salivary glands. The fraction of mosquitoes with sporozoites in their salivary glands has been called the sporozoite rate (SR), which in our notation is \\[ z = \\frac{Z}{M}\\] The number of bites by vector mosquitoes, per person, per day is called the entomological inoculation rate (EIR). It is defined as the product of the HBR and the SR: \\[\\mbox{EIR} = \\mbox{SR} \\times \\mbox{HBR}\\] In our notation, the EIR is: \\[\\mbox{EIR} = z \\frac{fqM}{H} = \\frac{fqZ}{H}\\] As with the HBR, we would like to know how to connect estiamted values of the EIR to our formulas. Since that’s really complicated, we’ve spent a lot of time in the following sections discussing it. 1.1.5 Infected Humans Humans become infected after being bitten by an infectious mosquito. We assume the following: A fraction \\(b\\) of all bites by infectious mosquitoes cause an infection. The hazard rate for infection, also called the force of infection (FoI) and denoted \\(h\\) is \\(b \\times\\) EIR: \\[h = fqb \\frac{Z}{H}\\] Infections clear at the rate \\(r\\), per infection, per day (the average time to clear is \\(1/r\\) days), and after clearing an infection a person becomes susceptible to infection again. We can now write down our fourth equation describing changes in the number of infected humans: \\[\\begin{equation} \\frac{dX}{dt} = h (H-X) - r X \\end{equation}\\] 1.1.6 …as a System While we presented these equations one at a time, they work as a system. To see it all at once, we write it here as a system with four equations and two terms: \\[\\begin{equation} \\begin{array}{rl} \\frac{dM}{dt} &amp;= \\Lambda(t) - g M \\\\ \\frac{dY}{dt} &amp;= fq\\kappa(M-Y) - g Y \\\\ \\frac{dZ}{dt} &amp;= fq\\kappa_\\tau(M_\\tau-Y_\\tau)e^{-g\\tau} - g Z \\\\ \\frac{dX}{dt} &amp;= h (H-X) - rX \\\\ \\\\ \\hline \\\\ \\kappa &amp;= c \\frac{X(t)}{H} \\\\ h &amp;= b fq \\frac{Z(t)}{H} \\\\ \\end{array} \\end{equation}\\] A diagram of the a version of the Ross-Macdonald model, using equations from Aron and May [13] These equations describe processes in three domains (Figure 2.1): adult mosquito ecology (\\(M\\), and perhaps \\(V\\)); parasite infection dynamics in mosquito populations (\\(Y\\) and \\(Z\\)); parasite infection dynamics in human populations (\\(X\\)). The equations describing parasite infections in mosquito populations also include the variable \\(M\\), so the mosquito infection dynamics are coupled to the mosquito population dynamics. The way we’ve written the equations, each compartment has an input term (i.e., \\(\\Lambda\\), \\(\\kappa\\), or \\(h\\)) that depends on something else. We’ve passed \\(\\Lambda\\) as a parameter. For the infection dynamics, the terms \\(\\kappa\\) and \\(h\\) couple two separate systems. For adult mosquito dynamics, emergence is passed to the model as a parameters. There are, of course, more compact ways of writing these equations. We have written the equations this way to emphasize a few things. First, the terms make it clear exactly how the equations in one domain are connected to another. Second, if we wanted to start changing some of the assumptions, these terms help to isolate the parts we might like to change. By writing the equations in this modularized form, we can start to understand how we might be able to write software that would allow us to represent mosquito infection dynamics with different systems of equations. The next step is to find solutions. NOTE: We don’t introduce exDE or MicroMoB until Modularity and Software. References "],["solutions.html", "1.2 Solutions", " 1.2 Solutions What does a solution to these equations look like? Solutions to these equations are values of the variables over time \\(\\left( M(t), Y(t), Z(t), X(t) \\right)\\) that satisfy the system of four equations described above. We call these solutions orbits. To put it another way, if we took the derivatives of the orbits for any variable at any point in time using the basic definition \\[\\lim_{h\\rightarrow 0} \\frac{x(t+h)-x(t)}{h},\\] and then we used the values of the variables at time \\(t\\) to compute \\(dM/dt\\), \\(dY/dt\\), \\(dZ/dt\\), and \\(dX/dt\\) (i.e., using the formulas), we would get the same values. It is important that these orbits are unique: after specifying the initial values of the variables, there is one and only one set of orbits that solves the equations. When we solve the equations, we usually produce solutions from a starting point into a future, but the orbits are defined for all time – \\(i.e.\\) the process implies the existence of solutions far back into the past. These are deterministic equations, after all. As written, the equations do not define a model. Instead, the equations define a process or a model family. A model is something that can produce orbits. A model is defined only after assigning specific values to the parameters. Informally, we will often slip and use the “model” to describe a model family. It’s easy to slip up, and sometimes we can get by with being sloppy, but we need to remember the distinction. When we say that the software is modular, we mean that it is easy to swap out one model family for another. To find solutions of equations we use an R software package called deSolve. Because of the delay for the EIP, these are called delay differential equations, which are handled using a function called dede. An important step in solving delay differential equations is a function lagvalue() that computes and returns the values of variables at a time lag, \\(\\ell\\). In these equations, the lag is set by the EIP, \\(\\tau\\), so we must evaluate lagvalue(t-tau). In solving ordinary differential equations, we must pass initial conditions. To solve a delay differential equations, we must specify the initial conditions for the interval \\([-\\ell, t_0)\\), where \\(t_0\\) is the point in time when we start computing solutions. In these equations, since the equation for \\(dZ/dt\\) looks back \\(\\tau\\) units, we must specify values of \\(M(t)\\), \\(Y(t)\\), and \\(X(t)\\) for all values of \\(t \\in [-\\tau, t_0)\\). This forces an awkward choice, since we don’t know the solutions backwards in time, but would need to know those solutions to use them. What is typically done – and we’ve done it here – is to specify a constant set of initial values and moving on. Doing this introduces a little numerical slop. By slop, we mean that these values are not what we would get if we ran the equations backwards in time. In these equations, it won’t affect our analysis most of the time, so we’re happy to acknowledge this little problem and find ways around it. It’s a little thing, but we should never forget it, because we might find that it is affecting our analysis at some point. With deSolve, solving differential equations is not difficult – it just involves following a few steps. In the following, we walk through these steps: Write a function that computes the derivatives; Define initial conditions; Define the values of the parameters; Define a mesh on time; Call a function that solves the equations, such as dede for delay differential equations. Many users will find that reading this code is like learning how to compute \\(\\sqrt{2}\\). If so, feel free to learn it once and then skip it. 1.2.1 Derivatives The first step is to write down the equations to compute the derivatives. The solver expects a function with three required arguments (in this order): t is time y is the list of variables params is a set of parameters The derivatives are computed and returned in the same order as ‘y’ in a list. To make code that is easy to read, we make params as a list with parameter names (see below), so that inside the function with(params,{...}), the parameter names are visible. dAronMay = function(t, y, params){with(params,{ # Variables if(t&lt;=tau) ylag&lt;-y0 else ylag &lt;- lagvalue(t-tau) M=y[1]; M_tau = ylag[1] Y=y[2]; Y_tau = ylag[2]; Z=y[3]; X=y[4]; X_tau = ylag[4] # Terms kappa = c*X/H; kappa_tau = c*X_tau/H h = b*f*q*Z/H # Dynamics dM = Lambda(t) - g*M dY = f*q*kappa*(M-Y) -g*Y dZ = f*q*kappa_tau*(M_tau-Y_tau)*exp(-g*tau) -g*Z dX = h*(H-X)-r*X return(list(c(dM, dY, dZ, dX))) })} 1.2.2 Initial Values To run the model, we must supply initial values. If you were writing code yourself, it would be important to remember that the initial values and the return value for the derivatives must occur in the same order. A useful convention in {R} is to pass the initial values as a named list. Later, we can turn the outputs into a data frame, and then we can retrieve the variables by name. y0= c(M=60, Y=0, Z=0, X=1) The object y0 is a named list – the names are attached but invisible. y0 ## M Y Z X ## 60 0 0 1 When we turn it into a list, with as.list, the names are attached to the values: as.list(y0)$M ## [1] 60 If we use with, we create an environment where we can simply use the names: with(as.list(y0), { M }) ## [1] 60 1.2.3 Parameter Values We pass the parameters as a list. It might seem like overkill, but we have written a function makeParams() that takes default values and generates a list. This makes it easy to generate a new set of parameter values with alternative values, and it also helps us to write and pass function \\(\\Lambda(t)\\) with parameters we like. By passing the parameter as a list, the parameter values are available to the function dAronMay when we use with(params, {}). Note that we have also attached the initial values of the variables as a parameter set, which are the return values for lagvalue(t) when t&lt;0. makeParams = function(y0, g=1/12, f=1/2.5, q=0.95, c=0.15, b=0.55, r=1/200, H=1000, m=.05, ss=1, tau=10 ){ ss = min(1,max(0, ss)) return(list(y0=y0,g=g,f=f,q=q,c=c,H=H,tau=tau,b=b,r=r, Lambda = function(t){m*H*(1 + ss*sin(2*pi*t/365))})) } params = makeParams(y0) To make it absolutely clear, we are assuming: \\(g=1/12\\): mosquitoes live about \\(12\\) days, on average \\(f=1/2.5\\): mosquitoes feed every 2.5 days, on average \\(q=0.95\\): the human fraction is 95%; mosquitoes feed on humans 95% of the time \\(c=0.15\\): about 15% of bites on infectious humans infect a mosquito \\(b=0.55\\): about 55% of bites by infective mosquitoes cause an infection \\(r=1/200\\): human infections last about \\(200\\) days, on average \\(H=1000\\): we’re simulating transmission in a population of a thousand humans \\(\\tau=10\\): the extrinsic incubation period is about 10 days For emergence, we tune the average value using \\(m\\) and it is scaled to \\(H\\): The parameter \\(m\\) in the function above has been set to \\(0.05\\) by default. The parameter \\(ss\\) affects the amplitude of the fluctuations. We force it to take on values between 0 and 1. Emergence is modeled as a sinusoidal function with a yearly cycle. \\[\\Lambda(t) = m H \\left(1 + \\sin \\left(\\frac{2\\pi t}{365}\\right)\\right)\\] 1.2.4 Solving We define a mesh over time – the points in time when we would like to know the values of the variables: tt = seq(0,5*365, by=5) This code solves the equations: require(deSolve) yout &lt;- dede(y=y0, times=tt, func=dAronMay, parms=params) 1.2.5 Visualizing When we plot out the solutions, they look like this. "],["steady-states.html", "1.3 Steady States", " 1.3 Steady States Here, we analyze the system of equations in a narrow case when there is no seasonality, and the system reaches a steady state. To do so, we set the parameter ss=1, so that \\(\\Lambda(t)\\) is a constant; the resulting system is autonomous. We do this, in part, because the resulting system is easier to understand. We can develop intuition that can be applied (albeit with caution) to more complex systems. To be clear, we are dealing with this system: \\[\\begin{equation} \\begin{array}{rl} \\frac{dM}{dt} &amp;= \\Lambda - g M \\\\ \\frac{dY}{dt} &amp;= fq\\kappa(M-Y) - g Y \\\\ \\frac{dZ}{dt} &amp;= fq\\kappa_\\tau(M_\\tau-Y_\\tau)e^{-g\\tau} - g Z \\\\ \\frac{dX}{dt} &amp;= h (H-X) - rX \\\\ \\\\ \\hline \\\\ \\kappa &amp;= c \\frac{X(t)}{H} \\\\ h &amp;= b fq \\frac{Z(t)}{H} \\\\ \\end{array} \\end{equation}\\] As before, we have put the equations in their modularized form above, and the connecting terms below. The first thing to note is that \\(M\\) affects \\(Y\\) and \\(Z\\), which affect \\(X\\); but \\(M\\) is not affected by \\(Y\\) or \\(Z\\). Mosquito population density is exogenous to malaria dynamics. 1.3.1 Mosquito Density We can thus treat it separately in the analysis: \\[\\begin{equation} \\frac{dM}{dt} = \\Lambda - g M \\end{equation}\\] Since emergence rates are steady, mosquito population density reaches a steady state when \\(dM/dt=0\\), which occurs at: \\[\\begin{equation} \\bar M = \\frac{\\Lambda}{g} \\end{equation}\\] 1.3.2 EIR and Vectorial Capacity Next, we note that at a steady state, the delayed values of variables and terms don’t change, so from \\(dY/dt\\), we get: \\[\\begin{equation} g \\bar Y = fq\\kappa(\\bar M- \\bar Y) \\end{equation}\\] If we substitute the formula for \\(\\bar M\\) and solve for \\(\\bar Y\\), we get: \\[\\begin{equation} \\bar Y = \\frac{fq\\kappa}{g + fq\\kappa} \\frac{\\Lambda}{g} \\end{equation}\\] and since at the steady state, any variable at time \\(t+\\tau\\) is equal to its value at time \\(t\\), we substitute the formula for \\(g \\bar Y\\) into \\(dZ/dt\\) to get: \\[\\begin{equation} g \\bar Y e^{-g\\tau} = g \\bar Z \\end{equation}\\] Solving for \\(\\bar Z\\) we get: \\[\\begin{equation} \\bar Z = \\frac{f q \\kappa}{g + fq \\kappa} \\frac{\\Lambda}{g} e^{-g\\tau} \\end{equation}\\] At the steady state, \\[\\mbox{EIR} = fq \\frac{\\bar Z}{H},\\] Here, we pause to define the a quantity \\[S = \\frac{fq}{g}.\\] Since \\(1/g\\) is the lifespan, this term \\(S\\) is the number of bloodmeals a mosquito would take over its lifespan. If we rearrange the terms a bit, we can write out the expression for the EIR as a function of several parameters and one term: \\[\\begin{equation} \\mbox{EIR}(\\kappa) = fq \\frac{\\bar Z}{H} = \\frac{\\Lambda}{H} S^2 e^{-g\\tau} \\frac{\\kappa}{1 + S \\kappa} \\end{equation}\\] We think of the EIR as having two parts. We call the first part vectorial capacity (\\(V\\)): \\[\\begin{equation} V = fq \\frac{\\bar Z}{H} = \\frac{\\Lambda}{H} S^2 e^{-g\\tau} \\end{equation}\\] The second part involves only \\(\\kappa\\): \\[\\begin{equation} \\frac{\\kappa}{1 + S \\kappa} \\end{equation}\\] The numerator \\(\\kappa\\) is the probability of becoming infected, per bite. It is rarely close to one. The denominator, \\(1+S\\kappa\\), is a measure of saturation – how frequently are mosquitoes reinfected. The main point here is that as \\(\\kappa\\) increases, saturation increases. If we set \\(S\\) to the values in the previous plots, we can isolate this: In the limit as \\(\\kappa\\) becomes small, we isolate the first part: \\[\\lim_{\\kappa \\rightarrow 0} \\mbox{EIR}(\\kappa) = \\frac{\\Lambda}{H} S^2 e^{-g\\tau} = V\\] The two terms, EIR and vectorial capacity, are closely related. The EIR is the number of infective bites received, per person, per day. Vectorial capacity can be understood as the number of infective bites arising from all the mosquitoes biting a single human on a single day, assuming \\(\\kappa=1\\). The difference between the two is precisely \\[\\begin{equation} \\frac{\\kappa}{1 + S \\kappa} \\end{equation}\\] 1.3.3 Thresholds and Malaria Prevalence Now we want to use all of this to understand malaria prevalence as a function of vectorial capacity, but first we define the basic reproductive number: \\[R_0 = \\frac{bcV}{r}.\\] At the steady state, \\[\\kappa = c \\frac{X}{H}.\\] If we substitute this into the expression for the EIR, we get: \\[\\begin{equation} \\mbox{EIR} = c V X\\frac{1}{H + c S X} \\end{equation}\\] If we plug this into \\(dX/dt\\) we get an expression that involves only \\(X\\) \\[\\frac{1}{r} \\frac{dX}{dt} = X \\left( R_0 \\frac{H-X}{H + cSX} - 1\\right)\\] Since \\(X\\) is the density of infected humans, it can never be a negative number and it is always smaller than \\(H\\): we write \\(X \\in [0, H]\\). When \\(X\\) is very close to \\(0\\), then \\[\\frac{H-X}{H + cSX} \\lessapprox 1\\] but in the limit: \\[\\lim_{X \\rightarrow 0} \\frac{H-X}{H + cSX} = 1\\] It follows that when \\(X\\) is small: \\[\\frac{1}{r} \\frac{dX}{dt} \\approx X \\left( R_0 - 1\\right)\\] so if \\(R_0 &gt;1\\), then \\(X\\) will tend to increase. We let \\[x = \\frac{X}{H}\\] denote the prevalence of infection, or the fraction of people who are infected. Since \\(H\\) is constant, it is a simple matter to change the variables, and can write: In this equation, if \\(R_0 &gt; 1\\), then there is a steady state at: \\[\\bar x= \\frac{R_0 -1}{R_0 + c S}\\] and if \\(R_0&lt;1\\), then there is a stable steady state at \\(\\bar x=0\\). Since at the steady state, \\(\\kappa = c \\bar x\\), we can plug this back into the formulas above to get \\(\\bar Y\\) and \\(\\bar Z\\). What this analysis has shown is that when mosquito population densities are constant, then malaria reaches a steady state: if \\(R_0 &gt;1\\), then there is a positive endemic equilibrium, and if \\(R_0 &lt; 1\\), then malaria is absent from the system. The system is said to be stable – in fact, is is globally asymptotically stable, which means that all the orbits end up converging to the steady state. This statement has been proved many times in many papers, and since this book is focused on policy, we’ll let others worry about proofs. "],["stable-orbits.html", "1.4 Stable Orbits", " 1.4 Stable Orbits If emergence rates vary seasonally, how much of the analysis that we did to understand steady states still holds? Obviously, if conditions are changing seasonally, the model does not reach a steady state. In fact, after modification to suit the context, many of the same principles translate. The steady state analysis provides a good qualitative guide, but that the answers will look different. Here, we illustrate by solving systems to illustrate some basic points, which is easy enough. Analysis of the resulting dynamics can be quite difficult; it is covered in Temporal Dynamics. 1.4.1 Thresholds There is a threshold condition \\(R_0&gt;1\\) that determines whether malaria is endemic, but the formula for \\(R_0\\) depends on the form of \\(\\Lambda(t)\\). If we set \\(R_0=1\\), we can show that the threshold for persistence in a seasonal environment is \\(R_0 &gt; \\sigma &gt; 1\\) (see Figure 1.1). The math to compute threshold conditions in seasonal environments is in Temporal Dynamics. Figure 1.1: Here, we set \\(R_0= 1.02\\) for the model with constant emergence, and we show that malaria persists. For the same parameters and for the same average emergence rate, malaria declines with seasonality. 1.4.2 Orbits If \\(R_0 &gt;1\\), then all orbits converge to a set of stable orbits (See Figure 1.1). If \\(\\Lambda(t)\\) has an annual cycle, then after the orbits converge: - $M(t+365) = M(t)$; - $Y(t+365) = Y(t)$ and $Z(t+365) = Z(t)$; - $X(t+365) = X(t)$. Figure 1.2: With different initial values, the orbits converge and eventually lie on top of one another. 1.4.3 Average Dynamics If \\(R_0&gt;1\\) and malaria is endemic, the average prevalence of malaria infection is variable in a seasonal environment. While the prevalence is higher at the peak, the average for the whole year tends to be lower. Figure 1.3: Here, we set \\(R_0= 2\\) for the model with constant emergence, and we show that the prevalence of malaria is similar in the seasonal environment, but it’s higher as transmission peaks, lower in the off-season, and lower overall. "],["endemic-malaria.html", "1.5 Endemic Malaria", " 1.5 Endemic Malaria When we analyze these equations to determine their stability and to identify threshold conditions, we focus on threshold conditions and the behavior of these systems when malaria is rare. In most places, malaria is endemic so we need to be concerned about malaria immunity and its effects on transmission; malaria is under some level of control; and because of weather and other factors, the baseline conditions change from year to year. "],["discussion.html", "1.6 Discussion", " 1.6 Discussion "],["mosquito-dynamics.html", "2 Mosquito Dynamics", " 2 Mosquito Dynamics There are some very good reasons to care about mosquito ecology, particularly when it comes to vector control [16]. In this chapter, we fully define a model for mosquito ecology [17]. The process is actually quite simple: We define terms that describe egg-laying by adult mosquitoes; We write a basic equation that determines how eggs develop in aquatic habitats and then emerge as adults; We incorporate seasonality into parameters in an aquatic model; We replace the parameter \\(\\Lambda(t)\\) from the Aron-May model with a term that describes emergence of adults from aquatic habitats. References "],["aquatic-dynamics.html", "2.1 Aquatic Dynamics", " 2.1 Aquatic Dynamics \\[\\begin{equation} \\begin{array}{rl} \\frac{dL}{dt} &amp;= \\eta - (\\psi + \\phi + \\theta L) L \\\\ \\frac{dM}{dt} &amp;= \\Lambda - g M\\\\ \\\\ \\hline \\Lambda &amp;= \\frac{\\psi L}{2} \\\\ \\eta &amp;= \\chi \\nu M \\\\ \\end{array} \\end{equation}\\] "],["understanding-mosquito-dynamics.html", "2.2 Understanding Mosquito Dynamics", " 2.2 Understanding Mosquito Dynamics "],["realism.html", "3 Realism", " 3 Realism There are several reasons why models for policy will tend to be more complex than models developed for science. When models are used to guide policy, the evidence should be cumulative, and the advice should be consistent across studies. Over time, the advice should shift from generic advice to specific advice as more evidence is gathered. To carry a conversation forward, the models used to guide discussions will tend to grow more complex over time. To build models that can serve malaria policy, we need the models to be realistic enough to be compelling. It might take a lot of work to build a model that has been fit to all the evidence describing malaria in a management unit over the recent past, and it might cut against the instincts we have as scientists to add all that realism, but it’s worth it to make the effort if it helps communicate with malaria managers. In policy, models must be complex enough to serve many purposes all at once. In designing a software solution to the problem of building realistic models, we wanted a toolbox to build models that would directly address the concerns of malaria programs. In the chapters that follow, we’ll show the features of this framework by constructing examples. If we’re principled about it, the primary cost is computational complexity. That is something the software was designed to manage. For the moment, we thus want to set aside concerns about realism vs. abstraction, about parsimony, and about error propagation, and we want to simply ask the question of how to build models with the features we want. This chapter is an overview of the historical development of malaria models and an introduction to the toolbox. We’ll cover the same material in much greater detail in the chapters that follow, and we’ll construct examples using exDE and MicroMoB. "],["epidemiology.html", "3.1 Epidemiology", " 3.1 Epidemiology Malaria epidemiology, in the narrow sense, deals with exposure, infection, immunity, disease, infectiousness, and drug taking. We need models that can be used as a synthesis for research and surveillance data. The complexity is daunting. This introduction is mainly historical, but we use it to preview some of the themes. 3.1.1 Superinfection 3.1.2 Infection and Immunity The Garki Model stage structured immunity Dutertre’s model There is no steady state; it is a stable orbit wrt age. 3.1.3 Treatment and Chemoprotection 3.1.4 Intrahost Models 3.1.5 Disease 3.1.6 Individual-Based Models 3.1.7 Age of Infection 3.1.8 Stage of Infection 3.1.9 Synthesis "],["age-and-aging.html", "3.2 Age and Aging", " 3.2 Age and Aging Immunity to malaria develops with age and exposure. The development of immunity is probably changing throughout life, so it makes sense to think of malaria epidemiology as ontogeny. For systems described generically by the state space, \\(\\mathscr X\\), the dynamics we care about have the form: \\[\\frac{\\partial {\\mathscr X}(a,t)}{\\partial a} + \\frac{\\partial {\\mathscr X}(a,t)}{\\partial t}\\] We might want to deal with malaria differently if we are studying malaria in cohorts. In a population where the FoI over time is \\(h(t)\\), we might want to follow a birth cohort, so we define \\(h_d(a) = h(t-a)\\) for all \\(t&gt;d\\). We can then solve: \\[\\frac{d{\\mathscr X}}{d a} \\] which produces states in cohorts as they age, \\({\\mathscr X}(a|h).\\) When we simulate malaria transmission dynamics in populations for policy, we will want to put a mesh on age and segment the population. The dynamics are define for age strata, where the FoI is defined differently for each age stratum: \\[\\frac{d{\\mathscr X}_a}{d t}\\] which produces age-dependent states over time, \\({\\mathscr X}_a(t|h).\\) Our algorithms should guarantee that the epidemiological states over time provide an accurate match for the epidemiological states over age. 3.2.1 Boxcar Models 3.2.2 Delayed Age Strata "],["population-heterogeneity-and-stratification.html", "3.3 Population Heterogeneity and Stratification", " 3.3 Population Heterogeneity and Stratification Human populations are heterogeneous. Some kinds of heterogeneity affect how we understand malaria and what we should do, including who to target. To deal with heterogeneity in models, we will often need to segment a human population into sub-populations, or strata. When we talk about stratification, we mean it the narrow sense of segmenting a human population (i.e. not subdividing landscapes spatially1), because the model predictions made by creating strata that are more homogeneous should be more accurate. The guiding principle is that our analytics will should strive to be more accurate, and that we should thus identify and remove those sources of heterogeneity that would affect policy advice, whether it affects estimating the impact of interventions in the past or projecting those impacts into the future. We acknowledge that models are approximations, and that our approximations don’t have to be perfect. The goal is to find ways of propagating uncertainty that are good enough for the task at hand. In malaria epidemiology, some kinds of endogenous heterogeneity could be built into the epidemiological state space. Other kinds of heterogeneity, including consistent differences in exposure, differences in care seeking and drug taking, and differences created by malaria control (e.g. net ownership or vaccination), usually require stratification. The decision about how to strike the right balance depends on the model and the purpose of a study. The framework and supporting software offer a toolbox for stratification. It is designed to stratify populations in a principled way, so that we can understand how the heterogeneity affects transmission or outcomes that we care about, but we can also combine effects. We want to stratify populations by applying rules that split populations when the differences are large enough. (If we started with complex models, we might choose to join populations if the differences were small.) By so doing, we can compare the behaviors of models that differ from each other in only one way. If the differences are not too large, or if the differences in dynamical behaviors we care about are not too large, we might decide not to split the strata, and use the average. Because of the way models are encoded, it’s easy to build models that split the strata in multiple, independent ways. 3.3.1 Strata in the Ross model As a simple example, consider a simple Ross-style model for infection with exposure and recovery (described in Section 1.1.5): \\[\\frac{dX}{dt} = h (H-X)-r X\\] If exposure is heterogeneous, we could split this population into two strata and add subscripts (i.e., indexed by \\(i \\in \\left\\{1,2, \\ldots \\right\\}\\)): \\[\\frac{dX_i}{dt} = k_i h (H_i -X_i)-r X_i\\] We hold the average FoI constant by constraining the values of \\(k_i\\): \\[\\frac{\\sum_i k_i H_i}{H} = 1\\] Stratification is important if the differences are large. With two strata, it would not make sense to stratify if \\(k_1 \\approx k_2\\), but if \\(k_2 \\gg k_1\\) then it might change our expectations, or it might change what we recommend. 3.3.2 Frailties We will introduce segmentation first through models of Heterogeneous Exposure to malaria, where we consider various sources of frailty – proportional differences in the average hazard rate for infection (\\(k_i\\), in the example above). These differences in exposure can arise because of age, house type, risky behaviors, other factors. Frailty that is attributable to location (e.g. proximity of home to aquatic habitats) can be dealt with by sub-dividing space into patches, a topic that is taken up in Space below and Spatial Dynamics. Depending on the size of the patches, some differences in average rates of exposure due to location can persist, and these could be dealt with by generic stratification into high vs. low exposure strata. Some of the heterogeneous traits that we care about change dynamically, so we will also need to consider population flows among strata, which change the sizes of the strata. We would like to deal with these flows in a principled way. Bed net ownership and use are among the human behaviors that matters most for programs. In some cases, we will want to understand dynamic changes in bed net ownership, the patterns of use among those who own a net, personal protection, and community effects. Later, we show how to construct an example that describes all of these aspects of bednets. Segmentation is what we need to build models of pharmaceutical interventions with waning effectiveness, such as mass vaccination. Among the most important factors in malaria is age. We have defined algorithms to model [Aging] and other demographic change, the loss of bednets, waning protection or changing housing quality. 3.3.3 Demographic Change In a broader sense, stratification is also about subdividing landscapes into a set of spatial domains that share relevant features in order to tailor interventions to context. That is a topic we take up in a separate book, ( Robust Analytics for Malaria Policy. ).↩︎ "],["blood-feeding.html", "3.4 Blood Feeding", " 3.4 Blood Feeding The second topic we must tackle is blood feeding, which is an interaction between mosquitoes and humans. It is an asymmetric relationship – mosquitoes search for blood hosts, select a host, and blood feed. Humans, for their part, attract mosquitoes from a distance, move around, and spend time in places when mosquitoes are biting. Humans can wear protective clothing (or not), use bed nets (or not), or do other things that make them more or less available to humans. Despite all this, humans are often unaware that they have been bitten. Transmission occurs during blood feeding, and models of blood feeding should be able to take all this heterogeneity into account. If the models do a proper accounting, then the total number of human blood meals taken by mosquitoes would equal the number of blood meals received by humans. In doing so, we find no inspiration from Macdonald, whose description of human blood feeding was simple and phenomenological: a single parameter described the human blood feeding rates. After Garrett-Jones described the human blood index, drawing on decades of work, the one parameter was split into an overall blood feeding rate (\\(f\\)) and a human fraction (\\(q\\)). The question left unaddressed by Macdonald was how these rates vary by context, and the consequences for exposure. To do this, we reformulated the algorithm describing blood feeding [10]. Over the past two decades, several papers have drawn attention to the way blood feeding behaviors are or ought to be constrained by the availability of vertebrate hosts. It may be fine to assume that the density of vertebrate hosts doesn’t change, but something should change when a large fraction of people are using bednets. Even with static parameters, we should think through the limiting cases: if there are no vertebrate hosts, then there blood feeding should not occur (i.e., \\(f=0\\)); if there are no human hosts, then there should be no human blood meals (\\(q=0\\)); and if there are no alternatives to humans, all blood meals should be on humans (\\(q=1\\)). The concepts we devised for blood feeding must, therefore, integrate the notion of frailty with the process of mosquito search. On the one hand, the mosquitoes should blood feed at a slower rate if hosts are unavailable. On the other hand, human biting should become heterogeneous. To arrive at an adequate description, we need to formalize this notion of host availability. The logic is that mosquitoes search for humans. Differences among humans in their attractiveness are represented by a search weight. Mosquito search in a place depends on the amount of time spent by humans, but also by daily mosquito activity patterns; from these, we develop a notion of time at risk that characterize the way human activities expose them to mosquitoes. The mosquitoes add up all the time at risk spent by all the humans, which gives a measure of their availability. Availability describes humans as well as other vertebrate hosts, which are modified by mosquito preferences. The overall feeding rates and the human fraction are computed from availability using functional responses. To complete the picture, we consider how the expected rate of exposure could have a distribution in the population, which we call environmental heterogeneity. 3.4.1 Search and Risk 3.4.2 Search Weights and Availability To deal with heterogeneous exposure and many other phenomena, we need a sensible way of segmenting humans into population strata. Stratification makes it possible to deal with population heterogeneity. A new model of blood feeding is based on a model of blood feeding as the endpoint of a search for a blood host [10]. Each sub-population has a search weight (\\(w\\)), and the total availability of humans for blood feeding (\\(W\\)) is the sum of the sizes of the strata weighted by their search weights. We also consider the availability of alternative vertebrate species for blood feeding (\\(O\\)). 3.4.3 Functional Response Mosquito blood feeding rates are computed using a functional response to total availability of vertebrate hosts (\\(f = F_f(B)\\)). To compute total availability, we add a scaling parameter on alternative hosts, because mosquito preferences can translate into different patterns of search; total availability is \\(B=W + O^\\zeta\\). The human fraction is proportional to the relative availability of hosts \\(q = W/B\\). 3.4.4 Environmental Heterogeneity The search weights thus translate into a kind of Frailty, which is one component of heterogeneous exposure. Important sources of frailty include bednet use, housing type, and age. We also want to consider variability in exposure within a stratum – what is the distribution of the expected number of bites over time? We have already discussed frailties, so this is a different kind of heterogeneous exposure that we call Environmental Heterogeneity. This helps us to align models with data: mosquito counts data tend to be described well by negative binomial distributions, so it is likely that the distribution of infectious bites also follows a negative binomial distribution. We introduce a function that translate the EIR into the FoI: \\[h=F_h(E)\\] In the Ross-Macdonald model, the underlying assumption is consistent with a Poisson distribution, but we have also derived negative binomial hazard rates. Environmental heterogeneity can arise from two sources: the aggregated distributions of mosquitoes in micro-habitats, and the redistribution of mosquito populations by wind and weather; random movements of humans around mosquito micro-habitats that affect their risk in a way that doesn’t tend to change the mean; References "],["mosquito-behavior.html", "3.5 Mosquito Behavior", " 3.5 Mosquito Behavior 3.5.1 Resource Availability 3.5.2 Egg Laying 3.5.3 Search and Dispersal "],["space.html", "3.6 Space", " 3.6 Space Space is big, so we start by drawing boundaries around a part of the world we want to study, that we call the spatial domain. 3.6.1 Human Travel and Mobility The notion of a spatially distributed risk for humans and the modalities of human travel. Humans move around, so we develop a model of time spent. Time spent is sub-divided into three parts: time spent at home; time spent traveling, when a night is spent away from home; human mobility, which describes time spent around home when not traveling. For travel, we estimate a travel FoI. For time at home and mobility, after weighing time spent and mosquito diurnal activity patterns by time of day, we modify time spent to get a notion of time at risk After modifying time at risk by search weights, mosquito blood meals are distributed among all hosts according to their availability. 3.6.2 Mosquito Dispersal and Demography To describe mosquito spatial dynamics, we "],["time.html", "3.7 Time", " 3.7 Time 3.7.1 The EIP 3.7.2 Seasonality 3.7.3 Exogenous Forcing 3.7.4 Vector Control "],["mosquito-ecology-1.html", "3.8 Mosquito Ecology", " 3.8 Mosquito Ecology "],["integrated-vector-control.html", "3.9 Integrated Vector Control", " 3.9 Integrated Vector Control "],["pharmaceutic-interventions.html", "3.10 Pharmaceutic Interventions", " 3.10 Pharmaceutic Interventions "],["context.html", "3.11 Context", " 3.11 Context "],["measuring-malaria.html", "4 Measuring Malaria", " 4 Measuring Malaria If we want to use evidence to make policy, we need to understand transmission in its local context. Two major premises in malaria epidemiology and control are that we can understand malaria prevalence as an outcome of exposure, and that the outcomes of malaria control will also vary with exposure. A problem for us is that we must rely on estimated exposure to make our decisions, but there is a paucity of PfEIR data, so we will rely on whatever data we have to estimate the PfEIR (see Figure 4.1). This is a core algorithm for simulation-based analytics, and the framework was designed to serve these ends. Exposure is actually quite complex, but a major component of it involves understanding local mosquito populations. To quantify these factors, we rely on paired estimates of metrics to understand the factors affecting their scaling relationships: the PfPR; the PfEIR, the PfFoI. Ideally, we would use the PfSPR, if we knew how to correct for biases. In most cases, we must estimate the PfEIR from the PfPR. While we do this out of necessity, we must be aware of many sources of error that we can identify either a priori or that we can study through simulation. The framework we have developed makes it comparatively easy to simulate the effects and effect sizes of these factors. The list of things we must consider includes: The PfPR varies in a population by age, sex, and the diagnostic method; The PfPR is modified by drug-taking; the effect modification varies in a population by age, access to care, and adherance to drug regimens Exposure is seasonal seasonality would affect the true PfPR and the true PfEIR over time; seasonality could be a source of error in the estimated PfPR (especially with respect to age) and estimated PfEIR. Heterogeneous exposure: exposure varies by age; there are other identifiable sources of frailty that we can deal with through stratification (e.g. house type, location, bed net use), and there are many frailties we will not be able to identify; the relationship between exposure and infection is affected by environmental heterogeneity; because of variability in mosquito populations at a fine spatial grain over time and space, and the trajectories of individual humans who are put at risk, The PfEIR near home is obscured by human mobility through time at risk and exposure away from home; Travel and imported malaria can increase the PfPR Measurement errors in the PfEIR There are house effects that bias the estimation of the PfEIR Different methods of catching mosquitoes give different estimates for the HBR. These effects are incorporated into the framework. Frailties are dealt with by stratifying by age (\\(\\omega(a)\\)) and other traits and assigning biting weights; when combined with mobility, these become part of the mixing matrix, \\(\\beta\\). Environmental heterogeneity modifies the relationship between the PfEIR by stratum and the PfFoI (through \\(F_h\\)). Seasonality in mosquito density (\\(Z(t)\\)) translates into seasonality in exposure (\\(S(t)\\)). Drug taking and immunity modify the PfPR after exposure. In the following sections, we use the framework to illustrate the effects and effect sizes of these factors. Figure 4.1: A generalized framwork for understanding the relationship between the PfEIR and the PfPR: "],["realistic-bounds.html", "4.1 Realistic Bounds", " 4.1 Realistic Bounds An important reality check is that we can set sensible expectations about upper bounds on the PfPR in relation to exposure. The maximum value of the PfPR will tend to be observed in untreated populations with homogeneous exposure. To identify these bounds, we assume that we are passing the true PfEIR, but not necessarily the local PfEIR. "],["the-local-fraction.html", "4.2 The Local Fraction", " 4.2 The Local Fraction 4.2.1 Travel 4.2.2 Mobility "],["drug-taking.html", "4.3 Drug Taking", " 4.3 Drug Taking "],["seasonality-1.html", "4.4 Seasonality", " 4.4 Seasonality "],["frailty.html", "4.5 Frailty", " 4.5 Frailty At low intensity, frailty can affect the prevalence "],["environmental-heterogeneity-1.html", "4.6 Environmental Heterogeneity", " 4.6 Environmental Heterogeneity "],["pfeir-vs.-pfpr-in-data.html", "4.7 PfEIR vs. PfPR in Data", " 4.7 PfEIR vs. PfPR in Data "],["pfeir-vs.-pffoi-in-data.html", "4.8 PfEIR vs. PfFoI in Data", " 4.8 PfEIR vs. PfFoI in Data "],["synthesis-1.html", "4.9 Synthesis", " 4.9 Synthesis "],["measuring-control.html", "5 Measuring Control", " 5 Measuring Control Control modifies transmission, but it needs its own theory. "],["coverage.html", "5.1 Coverage", " 5.1 Coverage "],["effect-sizes.html", "5.2 Effect Sizes", " 5.2 Effect Sizes "],["modularity-and-software.html", "6 Modularity and Software", " 6 Modularity and Software Hundreds of publications have described new models of malaria [2,3]. The challenge we have taken on is to find a new way of building models for malaria that draws from all those good ideas to build models at any level of complexity. We want to do this with reusable, professional quality software. Ideally, the models that we develop would be sufficiently complex to address policy questions, yet remain amenable to analysis. To get there, we took a step back to try and understand malaria models, and to put this into a birds-eye view of the process of model building. From Ross’s first published model in 1905 to the first draft of this book, 117 years have passed. The story of malaria models can be summarized in three epochs. Ross’s models, and contributions to mathematical study of malaria made by Alfred J Lotka (1912-1923), George Macdonald (1950-1968), and Garrett-Jones (1964-1970) take us to the end first epoch, which is marked by the end of the Global Malaria Eradication Programme (GMEP, 1955-1969). As part of the GMEP, Macdonald’s formulas were extended by Garrett-Jones into the concept of vectorial capacity and a rudimentary theory of vector control. By 1970, the Ross-Macdonald model was more than just a set of equations. It was a theory for malaria dynamics and control supported by a well-developed set of concepts, parameters and metrics [1]. Over that same period of time, mathematical theory for directly transmitted diseases took a parallel path, with important mathematical contributions from Kermack and McKendrick, NTJ Bailey, and Bartlett. Sometime around 1980, mathematical epidemiology began a period of innovation and synthesis, particularly after the publications of Robert May and Roy Anderson made it a mainstream activity in departments of ecology. In malaria and mosquito-borne diseases, Klaus Dietz publications span the second epoch (1971-2006), including development of a mathematical model with immunity for the Garki Project [18], work on the dynamics of malaria under treatment by drugs [19], seasonality [20], and heterogeneous biting [21,22]. During this time, theory developed for malaria borrowed concepts and methods. In spatial dynamics, the patch models of Yorke and ** were modified to by Dye and Hasibeder to describe mosquito-borne pathogens [23,24]. The last epoch of malaria, which starts around 2006, is marked by two major developments: a maturing theory of malaria control; and the rise of branded, individual-based models. The publication of OpenMalaria in 2006 marks the beginning of the last epoch of malaria. Some important antecedents were Dana Fochs models for Aedes dynamics and dengue virus transmission, as CIMSiM and DENSiM. In malaria, several within-host models had been developed [25,26]. OpenMalaria traces its history back to an intrahost model developed by Dietz and Louis Molineaux [26]. After OpenMalaria, two other branded individual-based models were developed. One was developed by a team at Imperial College called Malaria Tools. Another was developed by a team at the Institute for Disease Modeling called eMod. The fact that the models were named and branded was significant – the authors had developed software that they would maintain and that they were willing to stand behind. The models had finally dealt with disease in a serious way, and through publications, the fitted models demonstrated a fidelity to evidence. The branding signaled continuity and consistency. Around 2007, new models of vector control began to appear that related intevention coverage levels to effect sizes. Macdonald’s work had focused on sensitivity to parameters, and the GMEP emphasized technical efficiency to achieve very high coverage (with IRS). Garrett-Jones developed vectorial capacity as a way of understanding vector control and effect modification by insecticide resistance. The new models extended Garrett-Jones ideas. The need for new models was motivated, at least in part, by the goal of achieving universal coverage with ITNs. What were reasonable coverage targets? The new generation of vector control models introduced the concept of an effect size on transmission as a function of intervention coverage levels, where coverage had one definition for operations (e.g. something like ownership) and another for effect sizes (e.g. related to vector contact rates with interventions). The goal of achieving very high coverage with ITNs bumped into the reality that nets are not durable, so new models have been devised to look at intervention coverage in relation to distribution schemes and product durability. While these concepts had been considered during the GMEP design phase, they did not appear in Macdonald’s models. If we want to take advantage of all the research that has been done, we need a way of understanding malaria models and the whole business of model building. References "],["model-building.html", "6.1 Model Building", " 6.1 Model Building Model building is a fairly involved process that includes several unavoidable steps: There must be some motivation for building a model, which usually starts with a conversation, boxes and arrows drawn on paper or a chalkboard or whiteboard. The process involves refining the questions, until there’s a well-formed idea – a reason for building a model. The idea gets translated into mathematics. The boxes get translated into variables, the arrows are rate parameters, a mathematical formalism is selected. The model gets analyzed. In some cases, when the model complexity exceeds a very low threshold on complexity, this is done with pencil and paper. It is only possible to analyze individual parts of the model this way. The model gets translated into pseudo-code, and then it gets implemented as software that can produce output. This is followed by a long and painful process of verifying that the software does what the pseudo-code says it should do. After awhile, the software is trusted, and it’s time to use it. Some thought is given to the correspondence between the variables in a model, observable quantities, and the observational process itself. This process can be a part of what happens above, but at some point, the models need to be fitted to data. The software produces output and then: the outputs are visualized; models are fitted to data; graphs are made; papers or reports are published; and careers advance. That’s the simple story of model development. What happens next is could be one of the following: Someone re-examines an existing model and notices it is inadequate in some way: it is missing some features, or it might make an assumption that ought to be modified. Simple models become spatial models, single populations are structured. Someone decides to implement the model in a different way, perhaps with a different mathematical formalism. Continuous time models are translated into discrete time models. Deterministic models become stochastic. Autonomous processes become non-autonomous. Through this process, hundreds of malaria models were published. A problem with this process has been that the software is often developed for bespoke tasks (i.e. to publish a paper). The software is often poorly documented and difficult to reuse. The costs of building a model for one task limited the complexity of the model. It was difficult to combine elements of one model developed for one purpose, with someone else’s model developed for another purpose. In malaria, this ad hoc process of writing new models was found to be inadequate to serve the broad range of policy questions. One way of dealing with the complexity was to build individual-based models, but individual-based models have some of the same limitations as reality. "],["modular-computation.html", "6.2 Modular Computation", " 6.2 Modular Computation Before OpenMalaria, most models of malaria modified the Ross-Macdonald model in one way [2]. The innovation was focused on specific themes or questions: how long would an infection last in models with superinfection? 6.2.1 exDE We have written the software that solves these equations in a package called exDE. References "],["heterogeneous-exposure.html", "7 Heterogeneous Exposure", " 7 Heterogeneous Exposure For humans, exposure to malaria means exposure to the bites of infectious mosquitoes. A problem that we’ll have to deal with sooner or later is that exposure risk differs among humans over space and time. While this might seem like an odd thing to introduce so early, we will have to tackle the topic sometime. The discussion of [Heterogeneous Biting], in the previous chapter, showed that heterogeneity plays an important in understanding transmission and thresholds. This discussion of heterogeneous exposure (i.e., looking at heterogeneous biting from the human side) is a good way of introducing some of the core concepts that are built into the framework: [Heterogeneous Biting] is one way of getting around a conundrum. In models with homogeneous biting, the relationship between average mosquito density and the prevalence of infection would lead us to make quantitative predictions about the likely effects of vector control. We discuss two different kinds of heterogeneous exposure: frailty, and environmental heterogeneity. In a nutshell, frailty multiplies the mean hazard rate for a sub-population by some amount \\(k\\). Environmental heterogeneity does not affect the mean, but it changes the distribution of the mean. We introduce the idea that we can deal with frailties in human populations by segmenting the population into strata. We set the stage for a new model of mosquito blood feeding that we introduce in the next chapter. In a chapter on [Approximation], we use these models to discuss the problem of model-based inference. "],["overview.html", "7.1 Overview", " 7.1 Overview Some reasons heterogeneous exposure to malaria have been documented in hundreds of studies. This is an overview. 7.1.1 Age Port, Boreham Carnevale 7.1.2 Location 7.1.3 House Type 7.1.4 Activities "],["frailtyCh.html", "7.2 Frailty", " 7.2 Frailty In general, we define frailty as a multiplicative factor on the FoI. If the average FoI in the population is \\(h\\), then the FoI in a stratum is \\(hk\\). The size of the stratum, \\(p_k\\), is constrained such that: \\[\\int_0^\\infty k \\; p_k \\; dk = 1\\] With this constraint, the mean FoI in the population is \\(h\\). Continuous distributions are difficult to extend, but we can stratify a population to accomplish some of the same effects. "],["environmentalHeterogeneity.html", "7.3 Environmental Heterogeneity", " 7.3 Environmental Heterogeneity "],["blood-feeding-1.html", "8 Blood Feeding", " 8 Blood Feeding The endpoint "],["host-availability.html", "8.1 Host Availability", " 8.1 Host Availability "],["blood-feeding-rates.html", "8.2 Blood Feeding Rates", " 8.2 Blood Feeding Rates "],["the-human-fraction.html", "8.3 The Human Fraction", " 8.3 The Human Fraction "],["the-mixing-matrix-beta.html", "8.4 The Mixing Matrix, \\(\\beta\\)", " 8.4 The Mixing Matrix, \\(\\beta\\) "],["spatial-dynamics.html", "9 Spatial Dynamics", " 9 Spatial Dynamics "],["temporal-dynamics.html", "10 Temporal Dynamics ", " 10 Temporal Dynamics "],["exogenous-forcing-1.html", "10.1 Exogenous Forcing", " 10.1 Exogenous Forcing "],["mosquito-survival-through-the-eip.html", "10.2 Mosquito Survival through the EIP", " 10.2 Mosquito Survival through the EIP "],["cohort-dynamics.html", "11 Cohort Dynamics", " 11 Cohort Dynamics We need a way of incorporating age into our models. "],["boxcar-models-1.html", "11.1 Boxcar Models", " 11.1 Boxcar Models "],["delay.html", "11.2 Delay", " 11.2 Delay "],["demography.html", "12 Demography ", " 12 Demography "],["migration.html", "12.1 Migration", " 12.1 Migration "],["stratification.html", "13 Stratification", " 13 Stratification "],["human-behavior.html", "14 Human Behavior", " 14 Human Behavior "],["human-mobility.html", "15 Human Mobility", " 15 Human Mobility "],["human-travel-and-malaria-importation.html", "16 Human Travel and Malaria Importation", " 16 Human Travel and Malaria Importation "],["malaria-infection.html", "17 Malaria Infection", " 17 Malaria Infection In the following sections, we walk through several models for the dynamics of malaria infection and immunity in humans. We cover infection and detection, immunity, infectiousness, disease, drug taking, and cohort dynamics. "],["overview-1.html", "17.1 Overview", " 17.1 Overview "],["multiplicity-of-infection-moi.html", "17.2 Multiplicity of Infection (MoI)", " 17.2 Multiplicity of Infection (MoI) "],["age-of-infection-aoi.html", "17.3 Age of Infection (AoI)", " 17.3 Age of Infection (AoI) "],["stage-of-infection-soi.html", "17.4 Stage of Infection (SoI)", " 17.4 Stage of Infection (SoI) "],["malaria-immunity.html", "18 Malaria Immunity", " 18 Malaria Immunity Exposure vs. age. "],["the-garki-model.html", "18.1 The Garki Model", " 18.1 The Garki Model "],["stage-structured-immunity.html", "18.2 Stage-Structured Immunity", " 18.2 Stage-Structured Immunity "],["strain-specific-immunity.html", "18.3 Strain Specific Immunity", " 18.3 Strain Specific Immunity "],["memory-tracking.html", "18.4 Memory Tracking", " 18.4 Memory Tracking "],["age-vs.-prevalence.html", "18.5 Age vs. Prevalence", " 18.5 Age vs. Prevalence "],["detecting-parasites.html", "19 Detecting Parasites ", " 19 Detecting Parasites "],["parasite-densities-and-detection.html", "19.1 Parasite Densities and Detection", " 19.1 Parasite Densities and Detection "],["light-microscopy.html", "19.2 Light Microscopy", " 19.2 Light Microscopy "],["biomarkers-and-rdts.html", "19.3 Biomarkers and RDTs", " 19.3 Biomarkers and RDTs "],["pcr.html", "19.4 PCR", " 19.4 PCR "],["gametocytes-and-infectiousness.html", "20 Gametocytes and Infectiousness ", " 20 Gametocytes and Infectiousness "],["gametocytemia.html", "20.1 Gametocytemia", " 20.1 Gametocytemia "],["anti-gametocyte-immunity.html", "20.2 Anti-Gametocyte Immunity", " 20.2 Anti-Gametocyte Immunity "],["fever-and-severe-disease.html", "21 Fever and Severe Disease ", " 21 Fever and Severe Disease "],["fever.html", "21.1 Fever", " 21.1 Fever "],["anemia.html", "21.2 Anemia", " 21.2 Anemia "],["severe-disease.html", "21.3 Severe Disease", " 21.3 Severe Disease "],["care-seeking.html", "22 Care Seeking", " 22 Care Seeking "],["drug-taking-1.html", "23 Drug Taking ", " 23 Drug Taking "],["curing-infections.html", "23.1 Curing Infections", " 23.1 Curing Infections "],["chemoprotection.html", "23.2 Chemoprotection", " 23.2 Chemoprotection "],["adherance.html", "23.3 Adherance", " 23.3 Adherance "],["treatment-rates.html", "23.4 Treatment Rates", " 23.4 Treatment Rates "],["pharmaceutical-interventions.html", "24 Pharmaceutical Interventions ", " 24 Pharmaceutical Interventions "],["smc.html", "24.1 SMC", " 24.1 SMC "],["mda.html", "24.2 MDA", " 24.2 MDA "],["drugs.html", "24.3 Drugs", " 24.3 Drugs "],["vaccines.html", "24.4 Vaccines", " 24.4 Vaccines "],["malaria-epidemiology.html", "25 Malaria Epidemiology ", " 25 Malaria Epidemiology "],["age-of-the-youngest-infection.html", "25.1 Age of the Youngest Infection", " 25.1 Age of the Youngest Infection "],["mosquitoes.html", "26 Mosquitoes", " 26 Mosquitoes An overview of mosquito ecology, "],["behavioral-state-models.html", "27 Behavioral State Models", " 27 Behavioral State Models "],["aquatic-ecology.html", "28 Aquatic Ecology", " 28 Aquatic Ecology "],["mosquito-microecology.html", "29 Mosquito Microecology", " 29 Mosquito Microecology Modeling mosquito population dynamics on point sets. "],["mosquito-dispersal.html", "30 Mosquito Dispersal", " 30 Mosquito Dispersal "],["microsimulation.html", "31 Microsimulation", " 31 Microsimulation "],["mosquito-ecology-2.html", "32 Mosquito Ecology ", " 32 Mosquito Ecology "],["population-dynamics.html", "32.1 Population Dynamics", " 32.1 Population Dynamics "],["vector-competence.html", "33 Vector Competence", " 33 Vector Competence "],["measuring-mosquitoes.html", "34 Measuring Mosquitoes", " 34 Measuring Mosquitoes "],["vector-control-1.html", "35 Vector Control", " 35 Vector Control Towards a theory of vector control. "],["insecticide-treated-bednets.html", "36 Insecticide-Treated Bednets", " 36 Insecticide-Treated Bednets "],["indoor-residual-spraying.html", "37 Indoor Residual Spraying", " 37 Indoor Residual Spraying "],["larval-source-management.html", "38 Larval Source Management", " 38 Larval Source Management "],["attractive-toxic-sugar-baits.html", "39 Attractive Toxic Sugar Baits", " 39 Attractive Toxic Sugar Baits "],["integrated-vector-control-1.html", "40 Integrated Vector Control", " 40 Integrated Vector Control "],["spatial-control.html", "41 Spatial Control", " 41 Spatial Control "],["pharmaceutical-interventions-1.html", "42 Pharmaceutical Interventions ", " 42 Pharmaceutical Interventions "],["smc-1.html", "42.1 SMC", " 42.1 SMC "],["mda-1.html", "42.2 MDA", " 42.2 MDA "],["drugs-1.html", "42.3 Drugs", " 42.3 Drugs "],["vaccines-1.html", "42.4 Vaccines", " 42.4 Vaccines "],["discrete-time.html", "43 Discrete Time", " 43 Discrete Time "],["stochasticity.html", "44 Stochasticity", " 44 Stochasticity "],["base-models.html", "45 Base Models", " 45 Base Models "],["built-in-analytics.html", "46 Built-in Analytics", " 46 Built-in Analytics "],["spatial-concepts-and-connectivity.html", "47 Spatial Concepts and Connectivity", " 47 Spatial Concepts and Connectivity "],["model-libraries.html", "48 Model Libraries", " 48 Model Libraries "],["references.html", "49 References", " 49 References If you want a PDF and can’t find it at the link provided, let us know and we can help you find a copy. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
